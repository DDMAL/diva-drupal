<?php
/**
 * @file
 * A module for working with diva.js
 */


/**
 * Implements hook_help.
 *
 * Displays help and module information
 *
 * @param path
 *  Which path of the site we're using to display help
 * @param arg
 *  Array that holds the current path as returned from arg() function.
 */
function diva_help($path, $arg) {
    switch ($path) {
        case 'admin/help#diva':
            return '<p>'. t("Working with diva.js") . "</p>";
            break;
        default:
            # code...
            break;
    }
}

/**
 * Implements hook_perm
 */

function diva_perm() {
    return array("administer diva module");
}

/**
 * Implements hook_menu.
 */
function diva_menu() {
    $items = array();

    $items['admin/config/diva'] = array(
        'title' => "Diva",
        'description' => "Configuration for the Diva module",
        'position' => "right",
        'weight' => -100,
        'page callback' => 'system_admin_menu_block_page',
        'access arguments' => array("administer diva module"),
        'file' => 'system.admin.inc',
        'file path' => drupal_get_path('module', 'system'),
    );

    $items['admin/config/diva/config'] = array(
        'title' => "Diva Config",
        'description' => 'Configuration for the Diva module',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('diva_admin_form'),
        'access arguments' => array('administer diva.js'),
        'type' => MENU_NORMAL_ITEM,
    );

    return $items;
}

function diva_admin_form($form, &$form_state) {
    $form['diva_path_to_vips'] = array(
        '#type' => 'textfield',
        '#title' => t('Path to the VIPS executable'),
        '#default_value' => variable_get('diva_path_to_vips', '/usr/local/bin'),
        '#size' => 12,
        '#maxlength' => 64,
        '#description' => t("The path where the vips software is installed."),
    );

    $form['diva_image_server'] = array(
        '#type' => 'textfield',
        '#title' => t("IIP Image Server"),
        '#default_value' => variable_get('diva_image_server', 'http://example.com:9000/iipsrv.fcgi'),
        '#size' => 64,
        '#maxlength' => 128,
        '#description' => t("Location of the IIP Image Server"),
    );

    $form['diva_default_tile_size'] = array(
        '#type' => 'textfield',
        '#title' => t("Default Tile Size"),
        '#default_value' => variable_get("diva_default_tile_size", "256x256"),
        '#size' => 12,
        '#maxlength' => 12,
        '#description' => t("Default Diva File Size (wxh)")
    );

    return system_settings_form($form);
}

function diva_form_alter(&$form, $form_state, $form_id) {
    if ($form_id == "diva_node_form") {
        $form['diva_images'] = array(
            '#type' => 'file',
            '#title' => t("Image Upload")
        );
        $form['diva'] = array(
            '#type' => 'fieldset',
            '#title' => t("Diva Settings"),
            '#collapsible' => TRUE,
            '#collapsed' => FALSE,
            '#group' => 'additional_settings'
        );
        $form['diva']['auto_title'] = array(
            '#type' => 'checkbox',
            '#title' => t("Auto title"),
            '#description' => t("Set the auto-title parameter")
        );
        $form['diva']['fullscreen'] = array(
            '#type' => 'checkbox',
            '#title' => t("Full-Screen"),
            '#description' => t("Enable Full-screen mode")
        );
        $form['diva']['goto_page'] = array(
            '#type' => 'checkbox',
            '#title' => t("Go To Page"),
            '#description' => t("Enable Go To Page block")
        );
        $form['diva']['grid'] = array(
            '#type' => 'checkbox',
            '#title' => t("Grid View"),
            '#description' => t("Enable Grid View Mode")
        );
        $form['diva']['grid_slider'] = array(
            '#type' => 'checkbox',
            '#title' => t("Grid Slider"),
            '#description' => t("Enable the Grid Slider")
        );
        $form['diva']['keyscroll'] = array(
            '#type' => 'checkbox',
            '#title' => t("Key Scroll"),
            '#description' => t("Enable Scroll using Arrow Keys")
        );
        $form['diva']['spacescroll'] = array(
            '#type' => 'checkbox',
            '#title' => t("Space Scroll"),
            '#description' => t("Enable Scroll Using Spacebar")
        );
        $form['diva']['zoomslider'] = array(
            '#type' => 'checkbox',
            '#title' => t("Zoom Slider"),
            '#description' => t("Enable the Zoom Slider")
        );
        $form['diva']['fixed_height_grid'] = array(
            '#type' => 'checkbox',
            '#title' => t("Fixed Height Grid"),
            '#description' => t("Enable Fixed Height Grid")
        );
        $form['diva']['max_pages_per_row'] = array(
            '#type' => 'textfield',
            '#title' => t("Max Pages Per Row"),
            '#description' => t("Maximum Pages Per Row")
        );
        $form['diva']['min_pages_per_row'] = array(
            '#type' => 'textfield',
            '#title' => t("Min Pages Per Row"),
            '#description' => t("Minimum Pages Per Row")
        );
        $form['diva']['def_pages_per_row'] = array(
            '#type' => 'textfield',
            '#title' => t("Default Pages Per Row"),
        );
        $form['diva']['max_zoomlevel'] = array(
            '#type' => 'textfield',
            '#title' => t("Max Zoom"),
            '#description' => t("Maximum Pages Per Row")
        );
        $form['diva']['min_zoomlevel'] = array(
            '#type' => 'textfield',
            '#title' => t("Min Zoom"),
            '#description' => t("Minimum Pages Per Row")
        );
        $form['diva']['def_zoomlevel'] = array(
            '#type' => 'textfield',
            '#title' => t("Default Zoom Level"),
        );
        $form['diva']['tile_width'] = array(
            '#type' => 'textfield',
            '#title' => t("Tile Width"),
        );
        $form['diva']['tile_height'] = array(
            '#type' => 'textfield',
            '#title' => t("Tile Height"),
        );
        $form['diva']['viewport'] = array(
            '#type' => 'textfield',
            '#title' => t("Viewport Size"),
        );
        $form['diva']['adaptive_padding'] = array(
            '#type' => 'textfield',
            '#title' => t("Adaptive Padding"),
            '#description' => t("The value of the adaptive padding setting")
        );
    } elseif (isset($form['type']) && isset($form["#node"]) && $form['type']['value'] . '_node_form' == $form_id) {
        dpm("hi there");
    }
}

function diva_node_validate($node, $form) {
    dpm("Node Validate Called");
}

function diva_node_load($nodes, $types) {
    dpm("Node Load Called");
}

function diva_node_insert($node) {
    dpm("Node Insert Called");
}

function diva_node_delete($node) {
    dpm("Node Delete Called");
}

function diva_node_update($node) {
    dpm("Node Update Called");
}

function diva_node_view($node, $build_mode = "full") {
    dpm("Node View Called");
}

